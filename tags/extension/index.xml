<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Extension on Tic Tac Tech</title><link>https://troll-warlord.github.io/tictactech/tags/extension/</link><description>Recent content in Extension on Tic Tac Tech</description><generator>Hugo</generator><language>en</language><atom:link href="https://troll-warlord.github.io/tictactech/tags/extension/index.xml" rel="self" type="application/rss+xml"/><item><title>Kubernetes Custom Resource Definition (CRD)</title><link>https://troll-warlord.github.io/tictactech/blogs/kubernetes/custom_resource_definition/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://troll-warlord.github.io/tictactech/blogs/kubernetes/custom_resource_definition/</guid><description>&lt;div style="display: flex; align-items: center; margin-bottom: 20px">
 &lt;img src="https://troll-warlord.github.io/tictactech/images/kubernetes/custom_resource_definition.svg"
 alt="Custom Resource Definition" style="height: 60px; margin-right: 12px" />
 &lt;h2 style="margin: 0">Custom Resource Definition&lt;/h2>
&lt;/div>

&lt;p>A &lt;strong>Custom Resource Definition (CRD)&lt;/strong> in Kubernetes allows users to define their own API objects — extending the Kubernetes API with domain-specific resources. CRDs are the foundation of the Kubernetes extensibility model and enable the creation of custom controllers and operators that behave like native Kubernetes resources.&lt;/p>
&lt;p>Using CRDs, teams can define custom objects such as &lt;code>BackupPolicy&lt;/code>, &lt;code>Database&lt;/code>, &lt;code>MLJob&lt;/code>, or &lt;code>IngressRoute&lt;/code> with their own schema, lifecycle, and automation logic — all managed declaratively just like built-in objects (&lt;code>Pod&lt;/code>, &lt;code>Service&lt;/code>, etc.).&lt;/p></description></item></channel></rss>