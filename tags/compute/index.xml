<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Compute on Tic Tac Tech</title><link>https://troll-warlord.github.io/tictactech/tags/compute/</link><description>Recent content in Compute on Tic Tac Tech</description><generator>Hugo</generator><language>en</language><atom:link href="https://troll-warlord.github.io/tictactech/tags/compute/index.xml" rel="self" type="application/rss+xml"/><item><title>What is vnet</title><link>https://troll-warlord.github.io/tictactech/blogs/azure/virtual_machine/what-is-vnet/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://troll-warlord.github.io/tictactech/blogs/azure/virtual_machine/what-is-vnet/</guid><description>&lt;p>Lorem ipsum dolor sit amet consectetur adipiscing elit. Quisque faucibus ex sapien vitae pellentesque sem placerat. In id cursus mi pretium tellus duis convallis. Tempus leo eu aenean sed diam urna tempor. Pulvinar vivamus fringilla lacus nec metus bibendum egestas. Iaculis massa nisl malesuada lacinia integer nunc posuere. Ut hendrerit semper vel class aptent taciti sociosqu. Ad litora torquent per conubia nostra inceptos himenaeos.&lt;/p>
&lt;p>Lorem ipsum dolor sit amet consectetur adipiscing elit. Quisque faucibus ex sapien vitae pellentesque sem placerat. In id cursus mi pretium tellus duis convallis. Tempus leo eu aenean sed diam urna tempor. Pulvinar vivamus fringilla lacus nec metus bibendum egestas. Iaculis massa nisl malesuada lacinia integer nunc posuere. Ut hendrerit semper vel class aptent taciti sociosqu. Ad litora torquent per conubia nostra inceptos himenaeos.&lt;/p></description></item><item><title/><link>https://troll-warlord.github.io/tictactech/blogs/aws/ec2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://troll-warlord.github.io/tictactech/blogs/aws/ec2/</guid><description>&lt;div style="display: flex; align-items: center; margin-bottom: 20px">
 &lt;img src="https://troll-warlord.github.io/tictactech/images/aws/ec2.svg"
 alt="Amazon EC2" style="height: 60px; margin-right: 12px" />
 &lt;h2 style="margin: 0">Amazon EC2&lt;/h2>
&lt;/div>

&lt;p>Amazon Elastic Compute Cloud (EC2) is a foundational AWS service that provides scalable virtual servers (instances) in the cloud. It allows you to launch compute resources on-demand, with complete control over operating system, instance type, networking, and storage configurations.&lt;/p>
&lt;p>With EC2, you can build flexible, resizable, and secure compute infrastructure without investing in physical hardware. Whether you&amp;rsquo;re deploying a single web server or a fleet of services across multiple regions, EC2 adapts to your scaling and performance needs.&lt;/p></description></item><item><title/><link>https://troll-warlord.github.io/tictactech/blogs/azure/virtual_machine/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://troll-warlord.github.io/tictactech/blogs/azure/virtual_machine/</guid><description>&lt;div style="display: flex; align-items: center; margin-bottom: 20px">
 &lt;img src="https://troll-warlord.github.io/tictactech/images/azure/virtual_machine.svg"
 alt="Virtual Machine (VM)" style="height: 60px; margin-right: 12px" />
 &lt;h2 style="margin: 0">Virtual Machine (VM)&lt;/h2>
&lt;/div>

&lt;p>&lt;strong>Azure Virtual Machines&lt;/strong> offer scalable, on-demand computing resources in the cloud. As an Infrastructure-as-a-Service (IaaS) offering, they allow you to run Windows or Linux workloads without worrying about underlying hardware, while retaining full control over the operating system and installed applications.&lt;/p>
&lt;p>Azure VMs are ideal when you need &lt;strong>custom software configurations, legacy applications, or administrative control&lt;/strong> at the OS level.&lt;/p></description></item><item><title/><link>https://troll-warlord.github.io/tictactech/blogs/azure/compute_galery/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://troll-warlord.github.io/tictactech/blogs/azure/compute_galery/</guid><description>&lt;div style="display: flex; align-items: center; margin-bottom: 20px">
 &lt;img src="https://troll-warlord.github.io/tictactech/images/azure/compute_galery.svg"
 alt="Compute Gallery" style="height: 60px; margin-right: 12px" />
 &lt;h2 style="margin: 0">Compute Gallery&lt;/h2>
&lt;/div>

&lt;p>&lt;strong>Azure Compute Gallery&lt;/strong> (formerly Shared Image Gallery) is a service that enables you to manage, share, and distribute custom VM images across your organization, regions, and subscriptions. It&amp;rsquo;s designed for &lt;strong>image versioning, scaling VM deployments&lt;/strong>, and &lt;strong>simplifying image management at scale&lt;/strong>.&lt;/p>
&lt;hr>
&lt;h3 id="topics">Topics&lt;/h3>
&lt;div class="render-topic-links">
 
&lt;/div>

&lt;style>
 
 .link-hover:hover {
 text-decoration: underline;
 color: #0056b3; 
 }
&lt;/style>

&lt;hr>
&lt;h3 id="benefits-of-azure-compute-gallery">Benefits of Azure Compute Gallery&lt;/h3>
&lt;h4 id="centralized-image-management">Centralized Image Management&lt;/h4>
&lt;p>Store and organize your custom VM images in a gallery with image definitions and versions. This helps enforce consistency across environments and teams.&lt;/p></description></item><item><title/><link>https://troll-warlord.github.io/tictactech/blogs/azure/virtual_machine_scale_sets/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://troll-warlord.github.io/tictactech/blogs/azure/virtual_machine_scale_sets/</guid><description>&lt;div style="display: flex; align-items: center; margin-bottom: 20px">
 &lt;img src="https://troll-warlord.github.io/tictactech/images/azure/virtual_machine_scale_sets.svg"
 alt="Virtual Machine Scale Sets" style="height: 60px; margin-right: 12px" />
 &lt;h2 style="margin: 0">Virtual Machine Scale Sets&lt;/h2>
&lt;/div>

&lt;p>&lt;strong>Azure Virtual Machine Scale Sets (VMSS)&lt;/strong> let you deploy and manage a group of &lt;strong>identical, load-balanced VMs&lt;/strong>. They automatically &lt;strong>scale out/in&lt;/strong> based on demand and help maintain &lt;strong>high availability&lt;/strong> across multiple zones.&lt;/p>
&lt;hr>
&lt;h3 id="topics">Topics&lt;/h3>
&lt;div class="render-topic-links">
 
&lt;/div>

&lt;style>
 
 .link-hover:hover {
 text-decoration: underline;
 color: #0056b3; 
 }
&lt;/style>

&lt;hr>
&lt;h3 id="benefits-of-vmss">Benefits of VMSS&lt;/h3>
&lt;h4 id="automatic-scaling">Automatic Scaling&lt;/h4>
&lt;p>Scale out/in based on &lt;strong>metrics like CPU usage, memory, or custom signals&lt;/strong>. Ideal for elastic workloads and cost control.&lt;/p></description></item><item><title/><link>https://troll-warlord.github.io/tictactech/blogs/aws/lambda/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://troll-warlord.github.io/tictactech/blogs/aws/lambda/</guid><description>&lt;div style="display: flex; align-items: center; margin-bottom: 20px">
 &lt;img src="https://troll-warlord.github.io/tictactech/images/aws/lambda.svg"
 alt="Lambda" style="height: 60px; margin-right: 12px" />
 &lt;h2 style="margin: 0">Lambda&lt;/h2>
&lt;/div>

&lt;p>&lt;strong>AWS Lambda&lt;/strong> lets you run code without provisioning or managing servers. You just upload your function, and Lambda runs it in response to events, auto-scaling as needed.&lt;/p>
&lt;hr>
&lt;h3 id="topics">Topics&lt;/h3>
&lt;div class="render-topic-links">
 
&lt;/div>

&lt;style>
 
 .link-hover:hover {
 text-decoration: underline;
 color: #0056b3; 
 }
&lt;/style>

&lt;hr>
&lt;h3 id="key-features">Key Features&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>Event-driven execution&lt;/strong> via triggers (S3, API Gateway, SQS, etc.).&lt;/li>
&lt;li>&lt;strong>Automatic scaling&lt;/strong> based on request volume.&lt;/li>
&lt;li>&lt;strong>Pay-per-use&lt;/strong>: Only for execution time.&lt;/li>
&lt;li>Built-in &lt;strong>retry logic&lt;/strong> and &lt;strong>dead-letter queues&lt;/strong>.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="benefits">Benefits&lt;/h3>
&lt;ul>
&lt;li>No server maintenance.&lt;/li>
&lt;li>Easily integrates with AWS ecosystem.&lt;/li>
&lt;li>Highly scalable for asynchronous tasks.&lt;/li>
&lt;li>Supports major languages (Python, Node.js, Java, Go, etc.).&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="use-cases">Use Cases&lt;/h3>
&lt;ul>
&lt;li>Backend APIs (with API Gateway).&lt;/li>
&lt;li>Real-time file processing (e.g., S3 image resizing).&lt;/li>
&lt;li>Scheduled jobs (like CRON via EventBridge).&lt;/li>
&lt;li>Event processing from SQS, DynamoDB, or Kinesis.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="best-practices">Best Practices&lt;/h3>
&lt;ul>
&lt;li>Keep functions &lt;strong>stateless and small&lt;/strong>.&lt;/li>
&lt;li>Use &lt;strong>layers&lt;/strong> for shared dependencies.&lt;/li>
&lt;li>Monitor with &lt;strong>CloudWatch Logs and X-Ray&lt;/strong>.&lt;/li>
&lt;li>Limit execution time and memory for efficiency.&lt;/li>
&lt;li>Avoid cold starts with &lt;strong>provisioned concurrency&lt;/strong> if needed.&lt;/li>
&lt;/ul></description></item></channel></rss>